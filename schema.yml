openapi: 3.0.3
info:
  title: Price monitoring API
  version: 1.0.0
  description: API for monitoring changes in prices for products.
paths:
  /api/v1/create_log_record:
    post:
      operationId: v1_create_log_record_create
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/create_log_record/{owner_uuid}:
    post:
      operationId: v1_create_log_record_create_2
      parameters:
      - in: path
        name: owner_uuid
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/groups:
    get:
      operationId: v1_groups_list
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: v1_groups_create
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups.{api_view_format}/:
    get:
      operationId: v1_groups._list
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: v1_groups._create
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/groups/{id}:
    get:
      operationId: v1_groups_retrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: v1_groups_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: v1_groups_partial_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: v1_groups_destroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/groups/{id}.{api_view_format}/:
    get:
      operationId: v1_groups_._retrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: v1_groups_._update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: v1_groups_._partial_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: v1_groups_._destroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/log:
    get:
      operationId: v1_log_list
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner__uuid
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogItemsModelList'
          description: ''
    post:
      operationId: v1_log_create
      description: API endpoint that allows log to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
  /api/v1/log.{api_view_format}/:
    get:
      operationId: v1_log._list
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner__uuid
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogItemsModelList'
          description: ''
    post:
      operationId: v1_log._create
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
  /api/v1/log/{id}:
    get:
      operationId: v1_log_retrieve
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
    put:
      operationId: v1_log_update
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
    patch:
      operationId: v1_log_partial_update
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLogItemsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogItemsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogItemsModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
    delete:
      operationId: v1_log_destroy
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/log/{id}.{api_view_format}/:
    get:
      operationId: v1_log_._retrieve
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
    put:
      operationId: v1_log_._update
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogItemsModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
    patch:
      operationId: v1_log_._partial_update
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLogItemsModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogItemsModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogItemsModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogItemsModel'
          description: ''
    delete:
      operationId: v1_log_._destroy
      description: API endpoint that allows log to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/log_owners:
    get:
      operationId: v1_log_owners_list
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogOwnerModelList'
          description: ''
    post:
      operationId: v1_log_owners_create
      description: API endpoint that allows log owners to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
  /api/v1/log_owners.{api_view_format}/:
    get:
      operationId: v1_log_owners._list
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogOwnerModelList'
          description: ''
    post:
      operationId: v1_log_owners._create
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
  /api/v1/log_owners/{id}:
    get:
      operationId: v1_log_owners_retrieve
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
    put:
      operationId: v1_log_owners_update
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
    patch:
      operationId: v1_log_owners_partial_update
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLogOwnerModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogOwnerModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogOwnerModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
    delete:
      operationId: v1_log_owners_destroy
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/log_owners/{id}.{api_view_format}/:
    get:
      operationId: v1_log_owners_._retrieve
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
    put:
      operationId: v1_log_owners_._update
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogOwnerModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
    patch:
      operationId: v1_log_owners_._partial_update
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLogOwnerModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogOwnerModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogOwnerModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOwnerModel'
          description: ''
    delete:
      operationId: v1_log_owners_._destroy
      description: API endpoint that allows log owners to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Log owner.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products:
    get:
      operationId: v1_products_list
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: shop_name
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductModelList'
          description: ''
    post:
      operationId: v1_products_create
      description: API endpoint that allows products to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products.{api_view_format}/:
    get:
      operationId: v1_products._list
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: shop_name
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductModelList'
          description: ''
    post:
      operationId: v1_products._create
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products/{id}:
    get:
      operationId: v1_products_retrieve
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
    put:
      operationId: v1_products_update
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
    patch:
      operationId: v1_products_partial_update
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
    delete:
      operationId: v1_products_destroy
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/{id}.{api_view_format}/:
    get:
      operationId: v1_products_._retrieve
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
    put:
      operationId: v1_products_._update
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
    patch:
      operationId: v1_products_._partial_update
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
    delete:
      operationId: v1_products_._destroy
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/list_cities:
    get:
      operationId: v1_products_list_cities_retrieve
      description: API endpoint that allows products to be viewed or edited.
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products/list_cities.{api_view_format}/:
    get:
      operationId: v1_products_list_cities._retrieve
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products/list_names:
    get:
      operationId: v1_products_list_names_retrieve
      description: API endpoint that allows products to be viewed or edited.
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products/list_names.{api_view_format}/:
    get:
      operationId: v1_products_list_names._retrieve
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products/list_shop_names:
    get:
      operationId: v1_products_list_shop_names_retrieve
      description: API endpoint that allows products to be viewed or edited.
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/products/list_shop_names.{api_view_format}/:
    get:
      operationId: v1_products_list_shop_names._retrieve
      description: API endpoint that allows products to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
          description: ''
  /api/v1/users:
    get:
      operationId: v1_users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: v1_users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users.{api_view_format}/:
    get:
      operationId: v1_users._list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: v1_users._create
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}:
    get:
      operationId: v1_users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/{id}.{api_view_format}/:
    get:
      operationId: v1_users_._retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_._update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v1_users_._partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_._destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/current:
    get:
      operationId: v1_users_current_retrieve
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/current.{api_view_format}/:
    get:
      operationId: v1_users_current._retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: api_view_format
        schema:
          type: string
          pattern: ^[a-z0-9]+$
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/youtube_dl:
    post:
      operationId: v1_youtube_dl_create
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/youtube_dl/{action_name}:
    post:
      operationId: v1_youtube_dl_create_2
      parameters:
      - in: path
        name: action_name
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Group:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - name
      - url
    ImageModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          nullable: true
        product:
          type: integer
      required:
      - id
      - product
    LogItemsModel:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        data:
          nullable: true
        uuid:
          type: string
          format: uuid
          nullable: true
        owner:
          type: string
          format: uri
      required:
      - date_created
      - id
      - owner
      - url
    LogOwnerModel:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - date_created
      - id
      - name
      - url
      - uuid
    PaginatedGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedLogItemsModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogItemsModel'
    PaginatedLogOwnerModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LogOwnerModel'
    PaginatedProductModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductModel'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedGroup:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
    PatchedLogItemsModel:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        data:
          nullable: true
        uuid:
          type: string
          format: uuid
          nullable: true
        owner:
          type: string
          format: uri
    PatchedLogOwnerModel:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedProductModel:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        published:
          type: boolean
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageModel'
          readOnly: true
        uploaded_images:
          type: array
          items:
            type: string
          writeOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date-time
        name:
          type: string
          maxLength: 200
        price:
          type: number
          format: double
        price_currency:
          $ref: '#/components/schemas/PriceCurrencyEnum'
        price_unit:
          $ref: '#/components/schemas/PriceUnitEnum'
        shop_name:
          type: string
          maxLength: 200
        shop_address:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          maxLength: 200
    PatchedUser:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        password:
          type: string
          writeOnly: true
          maxLength: 128
    PriceCurrencyEnum:
      enum:
      - RUB
      - EUR
      - USD
      type: string
      description: |-
        * `RUB` - Руб.
        * `EUR` - EUR
        * `USD` - USD
    PriceUnitEnum:
      enum:
      - piece
      - kg
      type: string
      description: |-
        * `piece` - 1 штука
        * `kg` - 1 кг
    ProductModel:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        published:
          type: boolean
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageModel'
          readOnly: true
        uploaded_images:
          type: array
          items:
            type: string
          writeOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date-time
        name:
          type: string
          maxLength: 200
        price:
          type: number
          format: double
        price_currency:
          $ref: '#/components/schemas/PriceCurrencyEnum'
        price_unit:
          $ref: '#/components/schemas/PriceUnitEnum'
        shop_name:
          type: string
          maxLength: 200
        shop_address:
          type: string
          nullable: true
          maxLength: 200
        city:
          type: string
          maxLength: 200
      required:
      - city
      - date
      - date_created
      - id
      - images
      - name
      - price
      - published
      - shop_name
      - uploaded_images
      - url
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - password
      - url
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
